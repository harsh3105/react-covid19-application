{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/images.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","style","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","Helmet","image","src","coronaImage","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82637f36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed){\n        return 'Loading...';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={3} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={3} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={3} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of Deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if(country){\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n    try {\n        const { data: {confirmed,recovered,deaths,lastUpdate} } = await axios.get(changeableUrl);\n\n        return {confirmed,recovered,deaths,lastUpdate}\n    } catch (error) {\n        console.log(error);\n    }\n\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`)\n\n        const modifiedData = data.map((dailyData)=> ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data : {countries}} = await axios.get(`${url}/countries`);\n        //console.log(response);\n\n        return countries.map((country)=>country.name);\n    } catch (error) {\n        console.log(error);\n    }\n\n}","import React, {useState, useEffect } from 'react';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport style from './Chart.module.css';\n\nimport { fetchDailyData } from '../../api';\n\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    },[]);\n\n    const lineChart = (\n        dailyData.length \n        ? (\n            <Line \n            data={{\n                labels: dailyData.map(({date})=> date),\n                datasets: [{\n                    data : dailyData.map(({confirmed})=> confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true\n                },{\n                    data : dailyData.map(({deaths})=> deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255,0,0,0.5)',\n                    fill: true\n                }]\n            }}\n        /> ) : null\n    );\n\n    const barChart = (\n        confirmed\n        ? (\n            <Bar\n                data={{\n                    labels: ['Infected','Recovered','Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0,0,255,0.5)',\n                            'rgba(0,255,0,0.5)',\n                            'rgba(255,0,0,0.5)'\n                        ],\n                        data:[confirmed.value,recovered.value,deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: {display: false},\n                    title: {display: true,text:`Current state in ${country}`}\n                }}\n            />\n        ) :null\n    )\n\n    return (\n        <div className={style.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport {NativeSelect,FormControl} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n\n    const [ fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () =>{\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    //console.log(fetchedCountries);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet'\n\nimport {Cards,Chart,CountryPicker} from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api'\n\nimport coronaImage from './images/images.png';\n\nclass App extends Component{\n\n    state ={\n        data:{},\n        country: ''\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n\n        this.setState({ data : fetchedData })\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({ data : fetchedData, country: country })\n        //fetch data\n        //set the state\n    }  \n    \n    render(){\n        const { data ,country } = this.state;\n        return(\n            <div>\n            <Helmet>\n                <title>COVID-19</title>\n            </Helmet>\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/images.d7265326.png\";"],"sourceRoot":""}